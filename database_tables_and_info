Hello! i have a postgres database. here is the schema

-- Table: public.api_keys

-- DROP TABLE IF EXISTS public.api_keys;

CREATE TABLE IF NOT EXISTS public.api_keys
(
    api_key_id integer NOT NULL DEFAULT nextval('api_keys_api_key_id_seq'::regclass),
    api_key text COLLATE pg_catalog."default" NOT NULL,
    expires_at timestamp without time zone NOT NULL,
    created_at timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    revoked boolean NOT NULL DEFAULT false,
    replaced_by_api_key text COLLATE pg_catalog."default",
    user_id character varying COLLATE pg_catalog."default",
    CONSTRAINT api_keys_pkey PRIMARY KEY (api_key_id),
    CONSTRAINT api_keys_user_id_fkey FOREIGN KEY (user_id)
        REFERENCES public.users (user_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.api_keys
    OWNER to "Teo";
    -- Table: public.candidates

-- DROP TABLE IF EXISTS public.candidates;

CREATE TABLE IF NOT EXISTS public.candidates
(
    public_user_id uuid NOT NULL,
    user_id character varying COLLATE pg_catalog."default" NOT NULL,
    open_for_work boolean DEFAULT true,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT candidates_pkey PRIMARY KEY (public_user_id),
    CONSTRAINT candidates_user_id_key UNIQUE (user_id),
    CONSTRAINT candidates_user_id_fkey FOREIGN KEY (user_id)
        REFERENCES public.users (user_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.candidates
    OWNER to "Teo";
    -- Table: public.candidates_tech_stack

-- DROP TABLE IF EXISTS public.candidates_tech_stack;

CREATE TABLE IF NOT EXISTS public.candidates_tech_stack
(
    user_id character varying COLLATE pg_catalog."default" NOT NULL,
    tech_stack_id integer NOT NULL,
    public_user_id uuid,
    CONSTRAINT users_tech_stack_pkey PRIMARY KEY (user_id, tech_stack_id),
    CONSTRAINT fk_users_tech_stack_candidate FOREIGN KEY (public_user_id)
        REFERENCES public.candidates (public_user_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE,
    CONSTRAINT users_tech_stack_tech_stack_id_fkey FOREIGN KEY (tech_stack_id)
        REFERENCES public.tech_stack (tech_stack_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT users_tech_stack_user_id_fkey FOREIGN KEY (user_id)
        REFERENCES public.users (user_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.candidates_tech_stack
    OWNER to "Teo";
    -- Table: public.cities

-- DROP TABLE IF EXISTS public.cities;

CREATE TABLE IF NOT EXISTS public.cities
(
    city_id integer NOT NULL DEFAULT nextval('cities_city_id_seq'::regclass),
    city_name text COLLATE pg_catalog."default" NOT NULL,
    country_id integer NOT NULL,
    CONSTRAINT cities_pkey PRIMARY KEY (city_id),
    CONSTRAINT cities_country_id_fkey FOREIGN KEY (country_id)
        REFERENCES public.countries (country_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.cities
    OWNER to "Teo";
    -- Table: public.companies

-- DROP TABLE IF EXISTS public.companies;

CREATE TABLE IF NOT EXISTS public.companies
(
    company_id integer NOT NULL DEFAULT nextval('companies_company_id_seq'::regclass),
    company_name text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT companies_pkey PRIMARY KEY (company_id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.companies
    OWNER to "Teo";
    -- Table: public.countries

-- DROP TABLE IF EXISTS public.countries;

CREATE TABLE IF NOT EXISTS public.countries
(
    country_id integer NOT NULL DEFAULT nextval('countries_country_id_seq'::regclass),
    country_name text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT countries_pkey PRIMARY KEY (country_id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.countries
    OWNER to "Teo";
    -- Table: public.job_categories

-- DROP TABLE IF EXISTS public.job_categories;

CREATE TABLE IF NOT EXISTS public.job_categories
(
    job_category_id integer NOT NULL DEFAULT nextval('job_categories_job_category_id_seq'::regclass),
    job_category_name text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT job_categories_pkey PRIMARY KEY (job_category_id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.job_categories
    OWNER to "Teo";
    -- Table: public.job_titles

-- DROP TABLE IF EXISTS public.job_titles;

CREATE TABLE IF NOT EXISTS public.job_titles
(
    job_title_id integer NOT NULL DEFAULT nextval('job_titles_job_title_id_seq'::regclass),
    job_title_name text COLLATE pg_catalog."default" NOT NULL,
    job_category_id integer,
    CONSTRAINT job_titles_pkey PRIMARY KEY (job_title_id),
    CONSTRAINT job_titles_job_category_id_fkey FOREIGN KEY (job_category_id)
        REFERENCES public.job_categories (job_category_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.job_titles
    OWNER to "Teo";
    -- Table: public.tech_stack

-- DROP TABLE IF EXISTS public.tech_stack;

CREATE TABLE IF NOT EXISTS public.tech_stack
(
    tech_stack_id integer NOT NULL DEFAULT nextval('tech_stack_tech_stack_id_seq'::regclass),
    tech_stack_name text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT tech_stack_pkey PRIMARY KEY (tech_stack_id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.tech_stack
    OWNER to "Teo";
    -- Table: public.users

-- DROP TABLE IF EXISTS public.users;

CREATE TABLE IF NOT EXISTS public.users
(
    user_id character varying COLLATE pg_catalog."default" NOT NULL,
    firstname text COLLATE pg_catalog."default" NOT NULL,
    lastname text COLLATE pg_catalog."default" NOT NULL,
    email text COLLATE pg_catalog."default" NOT NULL,
    country_id integer,
    login_count integer DEFAULT 1,
    CONSTRAINT users_pkey PRIMARY KEY (user_id),
    CONSTRAINT users_country_id_fkey FOREIGN KEY (country_id)
        REFERENCES public.countries (country_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.users
    OWNER to "Teo";
    -- Table: public.work_experience

-- DROP TABLE IF EXISTS public.work_experience;

CREATE TABLE IF NOT EXISTS public.work_experience
(
    work_experience_id integer NOT NULL DEFAULT nextval('work_experience_work_experience_id_seq'::regclass),
    user_id character varying COLLATE pg_catalog."default",
    company_id integer,
    job_title_id integer,
    start_date date NOT NULL,
    end_date date,
    description character varying(500) COLLATE pg_catalog."default",
    public_user_id uuid,
    CONSTRAINT work_experience_pkey PRIMARY KEY (work_experience_id),
    CONSTRAINT fk_work_experience_candidate FOREIGN KEY (public_user_id)
        REFERENCES public.candidates (public_user_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE,
    CONSTRAINT work_experience_company_id_fkey FOREIGN KEY (company_id)
        REFERENCES public.companies (company_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT work_experience_job_title_id_fkey FOREIGN KEY (job_title_id)
        REFERENCES public.job_titles (job_title_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT work_experience_user_id_fkey FOREIGN KEY (user_id)
        REFERENCES public.users (user_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.work_experience
    OWNER to "Teo";

i have the data available aswell. i need your help to generate alot of data that i can just push into the database to fill it up. im mainly interested in filling up candidates with allocated tech stacks and work experiences. here is the data


candidates table
802d632d-021b-4705-b8a7-dd39924ce68c,101996714795516195278,t,2024-03-24 12:23:49.479909,2024-03-24 12:23:49.479909
b3ac8350-6729-4b21-8e95-37f4f6b5710e,109436491544740928102,t,2024-03-24 12:23:49.479909,2024-03-24 12:23:49.479909

candidates_tech_stack table
1,ICA
2,Redmind AB
3,Sociala Bildbyrån

companies table
1,ICA
2,Redmind AB
3,Sociala Bildbyrån

job_categories table
1,Accounting and Finance
2,Supply Chain and Logistics
3,Sales
4,Hospitality and Tourism
5,Education and Training
6,Customer Service and Call Center
7,Consulting
8,Technology Development
9,Project Management
10,Freelance

job_titles table
1,Accountant,1
2,Financial Analyst,1
3,Chief Financial Officer (CFO),1
4,Tax Specialist,1
5,Payroll Manager,1
6,Budget Analyst,1
7,Auditor,1
8,Investment Analyst,1
9,Logistics Coordinator,2
10,Supply Chain Analyst,2
11,Warehouse Manager,2
12,Procurement Manager,2
13,Inventory Specialist,2
14,Distribution Center Manager,2
15,Supply Chain Manager,2
16,Operations Analyst,2
17,Sales Representative,3
18,Account Manager,3
19,Sales Manager,3
20,Business Development Manager,3
21,Sales Consultant,3
22,Inside Sales Coordinator,3
23,Regional Sales Director,3
24,Customer Relations Specialist,3
25,Hotel Manager,4
26,Travel Consultant,4
27,Event Planner,4
28,Restaurant Manager,4
29,Tour Guide,4
30,Executive Chef,4
31,Front Desk Associate,4
32,Housekeeping Manager,4
33,Teacher,5
34,Curriculum Developer,5
35,Education Administrator,5
36,Instructional Coordinator,5
37,Tutor,5
38,Training Specialist,5
39,E-Learning Developer,5
40,Academic Advisor,5
41,Customer Service Representative,6
42,Call Center Manager,6
43,Technical Support Specialist,6
44,Client Service Coordinator,6
45,Help Desk Technician,6
46,Customer Experience Manager,6
47,Bilingual Customer Support,6
48,Management Consultant,7
49,IT Consultant,7
50,Human Resources Consultant,7
51,Financial Advisor,7
52,Strategy Consultant,7
53,Environmental Consultant,7
54,Legal Consultant,7
55,Software Developer,8
56,Web Developer,8
57,Systems Engineer,8
58,Data Scientist,8
59,Application Developer,8
60,Network Architect,8
61,Information Security Analyst,8
62,DevOps Engineer,8
63,Project Manager,9
64,Scrum Master,9
65,Program Manager,9
66,Project Coordinator,9
67,IT Project Manager,9
68,Construction Project Manager,9
69,Agile Coach,9
70,Product Manager,9
71,Freelance Writer,10
72,Freelance Graphic Designer,10
73,Freelance Web Developer,10
74,Freelance Consultant,10
75,Freelance Photographer,10
76,Freelance Translator,10
77,Freelance Data Analyst,10
78,Freelance Marketing Specialist,10
79,Webmaster,8
80,Backend Developer,8
81,On-Duty Store Manager,3
82,Sales Manager,3


tech_stack table
1,C#
2,.NET
3,NodeJS
4,React
5,JavaScript
6,TypeScript
7,Godot
8,ASP.NET
9,Entity Framework
10,Entity Framework Core
11,Swagger
12,Godot
13,Git
14,Firebase
15,SQL
16,SQLite
17,Azure
18,Prisma
19,Express
20,Postman
21,Xamarin
22,CSS
23,Figma
24,GIMP
25,HTML
26,Inkscape
27,Aseprite
28,Expo Go


users table
101996714795516195278,teodor,fredriksson,teoblu95@gmail.com,5,1
fOl7Ev5vEF,Teodor,Fredriksson,teo95@hotmail.se,5,5
109436491544740928102,teodor,fredriksson,teofredev@gmail.com,5,8
90504386,Teodor,Fredriksson,teo95@hotmail.se,5,15
JxRipO64RP,Teodor,Fredriksson,teo95@hotmail.se,242,5

work_experiences table
1,109436491544740928102,1,81,2019-01-01,2021-08-01,"Responsible for maintaining safety and quality routines. Responsible for scheduling and work distribution during evenings and 
weekends.",b3ac8350-6729-4b21-8e95-37f4f6b5710e
3,109436491544740928102,2,80,2022-09-01,2023-05-01,"Utilized agile methodologies and pair programming to create internal REST APIs 
and user interfaces for a mobile application used by golf clubs for local task 
distribution. Developed with technologies including Node.JS, React, TypeScript, 
JavaScript, and Firebase.",b3ac8350-6729-4b21-8e95-37f4f6b5710e
4,109436491544740928102,1,82,2016-08-01,2021-08-01,"Oversaw daily operations and performed regular evaluations across 
multiple departments. Developed strategic plans aimed at achieving long-term sales growth. Tasked with ongoing analysis of competitive landscapes and consumer 
purchasing trends. Orchestrated local marketing initiatives. Managed procurement planning",b3ac8350-6729-4b21-8e95-37f4f6b5710e
5,101996714795516195278,1,81,2019-01-01,2021-08-01,"Responsible for maintaining safety and quality routines. Responsible for scheduling and work distribution during evenings and 
weekends.",802d632d-021b-4705-b8a7-dd39924ce68c
7,101996714795516195278,2,80,2022-09-01,2023-05-01,"Utilized agile methodologies and pair programming to create internal REST APIs 
and user interfaces for a mobile application used by golf clubs for local task 
distribution. Developed with technologies including Node.JS, React, TypeScript, 
JavaScript, and Firebase.",802d632d-021b-4705-b8a7-dd39924ce68c
8,101996714795516195278,3,82,2016-08-01,2021-08-01,"Oversaw daily operations and performed regular evaluations across 
multiple departments. Developed strategic plans aimed at achieving long-term sales growth. Tasked with ongoing analysis of competitive landscapes and consumer 
purchasing trends. Orchestrated local marketing initiatives. Managed procurement planning",802d632d-021b-4705-b8a7-dd39924ce68c
6,101996714795516195278,3,79,2023-01-01,,Responsible for the creation and maintenance of Social Politik's new webshop. Working in collaboration with the project group to develop user-friendly design and functionality. Adapted to accessibility recommendations and data security laws.,802d632d-021b-4705-b8a7-dd39924ce68c
2,109436491544740928102,3,79,2023-09-01,,Responsible for the creation and maintenance of Social Politik's new webshop. Working in collaboration with the project group to develop user-friendly design and functionality. Adapted to accessibility recommendations and data security laws.,b3ac8350-6729-4b21-8e95-37f4f6b5710e

